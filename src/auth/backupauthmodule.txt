import { Module } from '@nestjs/common';
// import { JwtModule } from '@nestjs/jwt';
import {
  ConfigModule,
  // ConfigService,
} from '@nestjs/config';

import { PassportModule } from '@nestjs/passport';

import { UserModule } from '@src/users/user.module';

import AuthController from './auth.controller';
import { AuthService } from './auth.service';
import { LocalStrategy } from './local.strategy';
import JwtStrategy from './jwt.strategy';

@Module({
  imports: [
    UserModule,
    PassportModule,
    ConfigModule,
    // JwtModule.registerAsync({
    //   imports: [ConfigModule],
    //   useFactory: async (configService: ConfigService) => ({
    //     secretOrPrivateKey: configService.get('JWT_SECRET'),
    //     signOptions: {
    //       expiresIn: '1h',
    //     },
    //   }),
    //   inject: [ConfigService],
    // }),
  ],
  providers: [
    AuthService,
    LocalStrategy,
    JwtStrategy,
  ],
  controllers: [
    AuthController,
  ],
  exports: [
    AuthService,
  ],
})
export class AuthModule {}
